<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.LearningManagementSystem.Grade.GradeDAO">
    <resultMap type="HashMap" id="getGradelistMap">
        <result property="user_name" column="U.user_name"/>
        <result property="grade_at" column="G.grade_at"/>
        <result property="grade_type" column="grade_type"/>
        <result property="grade_score" column="G.grade_score"/>
        <result property="extra_self" column="extra_self"/>
        <result property="extra_attend" column="extra_attend"/>
        <result property="extra_will" column="extra_will"/>
        <result property="extra_final" column="extra_final"/>
        <result property="Rank" column="Rank"/>
    </resultMap>
    <select id="getGradelist" resultMap="getGradelistMap" parameterType="String">
        select U.user_name,
               ifnull(sum(case when day (G.grade_at) = 10 and grade_type = 1 then G.grade_score end), 0) as "first_multi",
               ifnull(sum(case when day (G.grade_at) = 10 and grade_type = 2 then G.grade_score end), 0) as "first_task",
               ifnull(sum(case when day (G.grade_at) = 15 and grade_type = 1 then G.grade_score end), 0) as "second_multi",
               ifnull(sum(case when day (G.grade_at) = 15 and grade_type = 2 then G.grade_score end), 0) as "second_task",
               ifnull(sum(case when day (G.grade_at) = 20 and grade_type = 1 then G.grade_score end), 0) as "third_multi",
               ifnull(sum(case when day (G.grade_at) = 20 and grade_type = 2 then G.grade_score end), 0) as "third_task",
               ifnull(sum(case when day (G.grade_at) = 30 and grade_type = 1 then G.grade_score end), 0) as "final_multi",
               ifnull(sum(case when day (G.grade_at) = 30 and grade_type = 2 then G.grade_score end), 0) as "final_task",
               ifnull(round(((Extra_self + Extra_Attend + Extra_will) / 3 * 0.2), 2),
                      0)                                                                                 as "capabilities",
               ifnull(round(((Extra_Blog + Extra_Udemy) / 2 * 0.1), 2), 0)                               as "submit",
               ifnull(round(Extra_Final * 0.4), 0)                                                       as "final",
               ifnull(round(
                                  ((sum(case when day (G.grade_at) = 30 and grade_type = 1 then G.grade_score end)
                                      +
                                    sum(case when day (G.grade_at) = 30 and grade_type = 2 then G.grade_score end)) *
                                   0.3)
                                  + round(((Extra_self + Extra_Attend + Extra_will) / 3 * 0.2), 2) +
                                  round(((Extra_Blog + Extra_Udemy) / 2 * 0.1), 2)
                                  + round(Extra_Final * 0.4)
                          ), 0)                                                                          as "total",
               RANK()                                                                                       OVER(ORDER BY Total DESC) "Rank"
        from grade G
                 left join extra E on E.user_id = G.user_id
                 join user U on E.user_id = U.user_id
        group by G.user_id;
    </select>
</mapper>